<application>
  <component name="AppStorage">
    <histories>
      <item value="groups" />
      <item value="Image" />
      <item value="eticket" />
      <item value="Mall Store" />
      <item value="I Pc Token Service" />
      <item value="Mall Eticket Service" />
      <item value="private final MallEticketService mallEticketService; private final IPcTokenService pcTokenService; private final ComEticketService comEticketService; @ApiOperation(value = &quot;保存电子票&quot;) @PostMapping(value = &quot;create&quot;, produces = MediaType.APPLICATION JSON UTF8 VALUE) public void creation(HttpServletRequest request, @Validated @RequestBody EticketConditionBO.Create create) { final Integer busId = pcTokenService.findTokenByBusId(request); mallEticketService.create(create, busId); } @ApiOperation(value = &quot;电子票信息&quot;) @GetMapping(value = &quot;/info&quot;, produces = MediaType.APPLICATION JSON UTF8 VALUE) public EticketDetailVO info(HttpServletRequest request, @ApiParam(&quot;电子票id&quot;) @RequestParam(&quot;eticketId&quot;) Integer eticketId) { return mallEticketService.findEticketInfoById(eticketId, pcTokenService.findTokenByBusId(request)); } @ApiOperation(value = &quot;更新电子票&quot;) @PostMapping(value = &quot;update&quot;, produces = MediaType.APPLICATION JSON UTF8 VALUE) public void update(HttpServletRequest request,@Validated @RequestBody EticketConditionBO.Update update) { mallEticketService.updateEticket(update,pcTokenService.findTokenByBusId(request)); // mallEticketService.deleteCache() } /* @ApiOperation(value = &quot;批量操作(上下架/删除)&quot;) @PostMapping(value = &quot;batchUpdate&quot;, produces = MediaType.APPLICATION JSON UTF8 VALUE) public void batchUpdate(@Validated @RequestBody EticketConditionBO.Create create) { mallEticketService.create(create); //todo 删除缓存根据商家id // mallEticketService.deleteCache() }*/ /*@ApiOperation(value = &quot;上下架/价格日历/操作&quot;) @PostMapping(value = &quot;set&quot;, produces = MediaType.APPLICATION JSON UTF8 VALUE) public void set(@Validated @RequestBody EticketConditionBO.Create create) { mallEticketService.create(create); //todo 删除缓存根据商家id // mallEticketService.deleteCache() }*/ @ApiOperation(value = &quot;电子票列表&quot;) @GetMapping(value = &quot;/list&quot;, produces = MediaType.APPLICATION JSON UTF8 VALUE) public List&lt;EticketListVO&gt; list(HttpServletRequest request) { return mallEticketService.findEticketListByBusId(pcTokenService.findTokenByBusId(request)); } /* @ApiOperation(value = &quot;分组列表&quot;) @GetMapping(value = &quot;/group/list&quot;, produces = MediaType.APPLICATION JSON UTF8 VALUE) public List&lt;EticketVO&gt; groupList(@ApiParam(&quot;电子票id&quot;) @RequestParam(&quot;BusId&quot;) Integer budId) { mallEticketService.findEticketListByBusId(); }&#10;*/ // @ApiOperation(value = &quot;新增分组&quot;) // @PostMapping(value = &quot;/group/create&quot;, produces = MediaType.APPLICATION JSON UTF8 VALUE) // public List&lt;EticketVO&gt; groupCreate(@ApiParam(&quot;电子票id&quot;) @RequestParam(&quot;BusId&quot;) Integer budId) { // mallEticketService.findEticketListByBusId(); // } /* @ApiOperation(value = &quot;店铺列表&quot;) @GetMapping(value = &quot;/shop/list&quot;, produces = MediaType.APPLICATION JSON UTF8 VALUE) public List&lt;EticketVO&gt; shopList(@ApiParam(&quot;电子票id&quot;) @RequestParam(&quot;BusId&quot;) Integer budId) { mallEticketService.findEticketListByBusId(); }*/" />
      <item value="Com Eticket Service" />
      <item value="com Eticket Service" />
      <item value="shop Code" />
      <item value="id" />
      <item value="shop Id" />
      <item value="sell End Time" />
      <item value="sell Begin Time" />
      <item value="sell Deadline Flag" />
      <item value="sell Deadline Date" />
      <item value="deadline Usage Begin Time" />
      <item value="deadline Usage End Time" />
      <item value="refund Flag" />
      <item value="eticket Name" />
      <item value="shop Address" />
      <item value="video Url" />
      <item value="Eticket Specification Update Param" />
      <item value="eticket Inventory" />
      <item value="ETICKET INVENTORY LIST" />
      <item value="IVENTORY" />
      <item value="ETICKET IVENTORY LIST" />
      <item value="sales volume" />
      <item value="当日使用截止时间" />
      <item value="Before" />
      <item value="exclusion" />
      <item value="CACHE TIME" />
      <item value="ops For Value" />
      <item value="CACHE TIME TWELVE HOUR" />
      <item value="CACHE TIME TWILVE HOUR" />
      <item value="CACHE TIME TEN HOUR" />
      <item value="JSON CONVERT ERROR" />
      <item value="cache Value" />
      <item value="lventory" />
      <item value="Iventory" />
      <item value="eticket Iventory" />
      <item value="java error in idea" />
      <item value="Eticket Group Param" />
      <item value="group Id" />
      <item value="groupId=88, groupSort=null" />
      <item value="Process finished with exit code 0" />
      <item value="INTERFACE INNER INVOKE ERROR" />
      <item value="Eticket Constant" />
      <item value="save Inventorys" />
      <item value="eticket Id" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="2030" />
        <entry key="ENGLISH" value="1994" />
        <entry key="CHINESE_TRADITIONAL" value="2" />
        <entry key="FRENCH" value="59" />
        <entry key="PORTUGUESE" value="5" />
        <entry key="SPANISH" value="3" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="[-_]" />
    <option name="overrideFont" value="true" />
    <option name="phoneticFontFamily" value="Lucida Sans Unicode" />
    <option name="primaryFontFamily" value="Microsoft YaHei UI" />
    <option name="translator" value="ai.youdao" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="72daf72feb661e19" />
        <option name="appKeyConfigured" value="true" />
      </youdao-translate>
    </option>
  </component>
</application>